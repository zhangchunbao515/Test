----------------插入一个结点算法流程----------------

begin
如果是空树, 直接插入
如果不是
	查找到一个合适的叶子, 插入到合适的位置
	如果当前结点的关键字大于最大的关键字, 要进行分裂
	把中间结点分裂到双亲中去
	如果双亲结点又大于最大关键字, 继续向上分裂, 直到不大于
end


----------------删除一个结点算法流程----------------

删除一个结点类似删除BST树结点, 并不是删除该结点的空间, 
而是将该结点的叶子后继替换上来, 然后再删除叶子后继, 
这样删除一个非叶子结点就可以转换成删除叶子结点的问题

begin
如果是叶子结点
	如果当前结点的关键字大于最小的限制
		或者没有双亲了, 那么直接删掉即可
	否则, 如果临近兄弟有多余的, 向兄弟拿
	否则
		如果双亲大于最小限制, 从双亲中拿一个与自己合并
		否则
			双亲与孩子合并, 高度降一, 造成不平衡, 要修复
			寻找临近的叔叔
				修复情况1  祖父一个, 叔叔一个
					合并后高度再次降一
					要循环到根, 进行平衡
				修复情况2  祖父多个, 叔叔一个
					祖父的一个结点与孩子合并
				修复情况3  祖父一个, 叔叔多个
					叔叔的一个结点与孩子合并
				修复情况4  祖父多个, 叔叔多个
					叔叔的一个结点与孩子合并
如果不是叶子
	找到其叶子后继, 将叶子后继的的值替换上来
	递归删除叶子后继
end

